// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuizWebApp.DatabaseServices;

#nullable disable

namespace QuizWebApp.Migrations
{
    [DbContext(typeof(WQuizzDBContext))]
    [Migration("20231102100727_ExtendSeedSprint4")]
    partial class ExtendSeedSprint4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuizWebApp.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerContent = "Berlin",
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerContent = "Orleans",
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnswerContent = "Paris",
                            IsCorrect = true,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            AnswerContent = "Brussels",
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            AnswerContent = "Houston",
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            AnswerContent = "New York",
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            AnswerContent = "Dallas",
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 8,
                            AnswerContent = "Washington, D.C",
                            IsCorrect = true,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 9,
                            AnswerContent = "Kyoto",
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            AnswerContent = "Tokyo",
                            IsCorrect = true,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 11,
                            AnswerContent = "Okinawa",
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 12,
                            AnswerContent = "Yokohama",
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 13,
                            AnswerContent = "Copenhagen",
                            IsCorrect = true,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 14,
                            AnswerContent = "Arhus",
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 15,
                            AnswerContent = "Aalborg",
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 16,
                            AnswerContent = "Frederiksberg",
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 17,
                            AnswerContent = "U",
                            IsCorrect = true,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 18,
                            AnswerContent = "Ur",
                            IsCorrect = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 19,
                            AnswerContent = "Ua",
                            IsCorrect = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnswerContent = "An",
                            IsCorrect = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 21,
                            AnswerContent = "H",
                            IsCorrect = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 22,
                            AnswerContent = "He",
                            IsCorrect = true,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 23,
                            AnswerContent = "Hl",
                            IsCorrect = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 24,
                            AnswerContent = "Hx",
                            IsCorrect = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 25,
                            AnswerContent = "M",
                            IsCorrect = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 26,
                            AnswerContent = "Ma",
                            IsCorrect = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 27,
                            AnswerContent = "Mg",
                            IsCorrect = true,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 28,
                            AnswerContent = "Na",
                            IsCorrect = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 29,
                            AnswerContent = "G",
                            IsCorrect = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 30,
                            AnswerContent = "Go",
                            IsCorrect = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 31,
                            AnswerContent = "Au",
                            IsCorrect = true,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 32,
                            AnswerContent = "Ar",
                            IsCorrect = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 33,
                            AnswerContent = "S",
                            IsCorrect = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 34,
                            AnswerContent = "Si",
                            IsCorrect = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 35,
                            AnswerContent = "Ar",
                            IsCorrect = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 36,
                            AnswerContent = "Ag",
                            IsCorrect = true,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 49,
                            AnswerContent = "Cheetah",
                            IsCorrect = false,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 50,
                            AnswerContent = "Chameleon",
                            IsCorrect = true,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 51,
                            AnswerContent = "Gorilla",
                            IsCorrect = false,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 52,
                            AnswerContent = "Sloth",
                            IsCorrect = false,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 41,
                            AnswerContent = "Hammerhead shark",
                            IsCorrect = false,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 42,
                            AnswerContent = "Great White shark",
                            IsCorrect = false,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 43,
                            AnswerContent = "Bull shark",
                            IsCorrect = false,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 44,
                            AnswerContent = "Whale shark",
                            IsCorrect = true,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 45,
                            AnswerContent = "Giraffe",
                            IsCorrect = false,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 46,
                            AnswerContent = "African Elephant",
                            IsCorrect = true,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 47,
                            AnswerContent = "Polar Bear",
                            IsCorrect = false,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 48,
                            AnswerContent = "Hippopotamus",
                            IsCorrect = false,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 37,
                            AnswerContent = "Lion",
                            IsCorrect = false,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 38,
                            AnswerContent = "Kangaroo",
                            IsCorrect = true,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 39,
                            AnswerContent = "Dolphin",
                            IsCorrect = false,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 40,
                            AnswerContent = "Penguin",
                            IsCorrect = false,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 53,
                            AnswerContent = "Bald Eagle",
                            IsCorrect = true,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 54,
                            AnswerContent = "American Robin",
                            IsCorrect = false,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 55,
                            AnswerContent = "Peregrine Falcon",
                            IsCorrect = false,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 56,
                            AnswerContent = "Wild Turkey",
                            IsCorrect = false,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 57,
                            AnswerContent = "Unity, Duty, Destiny",
                            IsCorrect = true,
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 58,
                            AnswerContent = "Power, Courage, Wisdom",
                            IsCorrect = false,
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 59,
                            AnswerContent = "Love, Hope, Peace",
                            IsCorrect = false,
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 60,
                            AnswerContent = "Imagination, Creativity, Innovation",
                            IsCorrect = false,
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 61,
                            AnswerContent = "2000",
                            IsCorrect = false,
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 62,
                            AnswerContent = "2001",
                            IsCorrect = true,
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 63,
                            AnswerContent = "2003",
                            IsCorrect = false,
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 64,
                            AnswerContent = "2005",
                            IsCorrect = false,
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 65,
                            AnswerContent = "Metru Nui",
                            IsCorrect = false,
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 66,
                            AnswerContent = "Voya Nui",
                            IsCorrect = false,
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 67,
                            AnswerContent = "Mata Nui",
                            IsCorrect = true,
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 68,
                            AnswerContent = "Artakha",
                            IsCorrect = false,
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 69,
                            AnswerContent = "Toa",
                            IsCorrect = false,
                            QuestionId = 18
                        },
                        new
                        {
                            Id = 70,
                            AnswerContent = "Matoran",
                            IsCorrect = false,
                            QuestionId = 18
                        },
                        new
                        {
                            Id = 71,
                            AnswerContent = "Rahi",
                            IsCorrect = true,
                            QuestionId = 18
                        },
                        new
                        {
                            Id = 72,
                            AnswerContent = "Turaga",
                            IsCorrect = false,
                            QuestionId = 18
                        },
                        new
                        {
                            Id = 73,
                            AnswerContent = "Fish and Chips",
                            IsCorrect = true,
                            QuestionId = 19
                        },
                        new
                        {
                            Id = 74,
                            AnswerContent = "Bangers and Mash",
                            IsCorrect = false,
                            QuestionId = 19
                        },
                        new
                        {
                            Id = 75,
                            AnswerContent = "Shepherd's Pie",
                            IsCorrect = false,
                            QuestionId = 19
                        },
                        new
                        {
                            Id = 76,
                            AnswerContent = "Chicken Tikka Masala",
                            IsCorrect = false,
                            QuestionId = 19
                        },
                        new
                        {
                            Id = 77,
                            AnswerContent = "Hamburger",
                            IsCorrect = false,
                            QuestionId = 20
                        },
                        new
                        {
                            Id = 78,
                            AnswerContent = "Hot Dogs",
                            IsCorrect = false,
                            QuestionId = 20
                        },
                        new
                        {
                            Id = 79,
                            AnswerContent = "Apple Pie",
                            IsCorrect = true,
                            QuestionId = 20
                        },
                        new
                        {
                            Id = 80,
                            AnswerContent = "Fried Chicken",
                            IsCorrect = false,
                            QuestionId = 20
                        },
                        new
                        {
                            Id = 81,
                            AnswerContent = "Sushi",
                            IsCorrect = false,
                            QuestionId = 21
                        },
                        new
                        {
                            Id = 82,
                            AnswerContent = "Ramen",
                            IsCorrect = false,
                            QuestionId = 21
                        },
                        new
                        {
                            Id = 83,
                            AnswerContent = "Tempura",
                            IsCorrect = false,
                            QuestionId = 21
                        },
                        new
                        {
                            Id = 84,
                            AnswerContent = "Sushi and Sashimi",
                            IsCorrect = true,
                            QuestionId = 21
                        },
                        new
                        {
                            Id = 85,
                            AnswerContent = "Goulash",
                            IsCorrect = true,
                            QuestionId = 22
                        },
                        new
                        {
                            Id = 86,
                            AnswerContent = "Wiener Schnitzel",
                            IsCorrect = false,
                            QuestionId = 22
                        },
                        new
                        {
                            Id = 87,
                            AnswerContent = "Kolbász",
                            IsCorrect = false,
                            QuestionId = 22
                        },
                        new
                        {
                            Id = 88,
                            AnswerContent = "Lángos",
                            IsCorrect = false,
                            QuestionId = 22
                        });
                });

            modelBuilder.Entity("QuizWebApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QuizWebApp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("QuestionContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuestionImgUrl")
                        .HasColumnType("text");

                    b.Property<int>("QuizId")
                        .HasColumnType("integer");

                    b.Property<int?>("TimeLimit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionContent = "What is the capital of France?",
                            QuestionImgUrl = "https://static.vecteezy.com/system/resources/previews/008/726/860/original/map-of-france-outline-map-illustration-free-vector.jpg",
                            QuizId = 1
                        },
                        new
                        {
                            Id = 2,
                            QuestionContent = "What is the capital of the USA?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Map_of_USA_with_state_names.svg/langhu-800px-Map_of_USA_with_state_names.svg.png",
                            QuizId = 1
                        },
                        new
                        {
                            Id = 3,
                            QuestionContent = "What is the capital of Japan?",
                            QuestionImgUrl = "https://cdn.pixabay.com/photo/2013/05/22/18/00/japan-112722_1280.jpg",
                            QuizId = 1
                        },
                        new
                        {
                            Id = 4,
                            QuestionContent = "What is the capital of Denmark?",
                            QuestionImgUrl = "https://static.vecteezy.com/system/resources/previews/019/476/194/original/denmark-map-in-europe-zoom-version-icons-showing-denmark-location-and-flags-vector.jpg",
                            QuizId = 1
                        },
                        new
                        {
                            Id = 5,
                            QuestionContent = "What is the chemical symbol of Uranium",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/HEUraniumC.jpg/1200px-HEUraniumC.jpg",
                            QuizId = 2
                        },
                        new
                        {
                            Id = 6,
                            QuestionContent = "What is the chemical symbol of Helium?",
                            QuestionImgUrl = "https://static.wikia.nocookie.net/fortnite/images/d/da/Balloons_%28Old%29_-_Item_-_Fortnite.png/revision/latest?cb=20200717131102",
                            QuizId = 2
                        },
                        new
                        {
                            Id = 7,
                            QuestionContent = "What is the chemical symbol of Magnesium?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/5/5c/CSIRO_ScienceImage_2893_Crystalised_magnesium.jpg",
                            QuizId = 2
                        },
                        new
                        {
                            Id = 8,
                            QuestionContent = "What is the chemical symbol of Gold?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/6/69/Gold_nugget_%28Australia%29_4_%2816848647509%29.jpg",
                            QuizId = 2
                        },
                        new
                        {
                            Id = 9,
                            QuestionContent = "What is the chemical symbol of Silver?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/55/Silver_crystal.jpg/1200px-Silver_crystal.jpg",
                            QuizId = 2
                        },
                        new
                        {
                            Id = 10,
                            QuestionContent = "Which of these animals is known for its ability to change color to camouflage itself?",
                            QuestionImgUrl = "https://static.spokanecity.org/photos/2019/09/30/leaf-colors/16x10/Full/leaf-colors.jpg",
                            QuizId = 5
                        },
                        new
                        {
                            Id = 11,
                            QuestionContent = "What is the largest species of shark?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/5/59/Caribbean_reef_shark.jpg",
                            QuizId = 5
                        },
                        new
                        {
                            Id = 12,
                            QuestionContent = "What is the largest land animal on Earth?",
                            QuestionImgUrl = "https://i.ytimg.com/vi/KhfCgkJmg8M/maxresdefault.jpg",
                            QuizId = 5
                        },
                        new
                        {
                            Id = 13,
                            QuestionContent = "Which of the following animals is a marsupial?",
                            QuestionImgUrl = "https://cdn.britannica.com/07/154807-050-3226C065/species-Wombat-wombats-wombat-population-Tasmania-Australia.jpg",
                            QuizId = 5
                        },
                        new
                        {
                            Id = 14,
                            QuestionContent = "What is the national bird of the United States?",
                            QuestionImgUrl = "https://www.usnews.com/object/image/0000016f-8c62-d408-a9ef-9ffe94a60000/200115bcusaprofile-editorial.usa.profile.jpg?update-time=1578608368142&size=superhero-medium",
                            QuizId = 5
                        },
                        new
                        {
                            Id = 15,
                            QuestionContent = "What are the three virtues of the Bionicle Universe?",
                            QuestionImgUrl = "https://biosector01.com/w/images/bs01/b/b6/BIONICLE_Logo.png",
                            QuizId = 4
                        },
                        new
                        {
                            Id = 16,
                            QuestionContent = "When was Bionicle first released?",
                            QuestionImgUrl = "https://biosector01.com/w/images/bs01/0/0e/Toa_Mata_Sets.jpg",
                            QuizId = 4
                        },
                        new
                        {
                            Id = 17,
                            QuestionContent = "What's the name of the island Bionicle first took place in?",
                            QuestionImgUrl = "https://biosector01.com/w/images/bs01/a/a2/CGI_Mata_Nui_%28Island%29.jpg",
                            QuizId = 4
                        },
                        new
                        {
                            Id = 18,
                            QuestionContent = "What are wild animals in the Bionicle universe called?",
                            QuestionImgUrl = "https://biosector01.com/w/images/bs01/b/b2/Promo_Art_Rahi.png",
                            QuizId = 4
                        },
                        new
                        {
                            Id = 19,
                            QuestionContent = "What is the national dish of the United Kingdom?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/6/68/UK_Flag_in_Scotland.jpg",
                            QuizId = 6
                        },
                        new
                        {
                            Id = 20,
                            QuestionContent = "Which dish is considered the national dish of the United States of America?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/e/ea/American_flag.jpg",
                            QuizId = 6
                        },
                        new
                        {
                            Id = 21,
                            QuestionContent = "What is Japan's national dish?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/f/f6/Emperor_of_Japan_Birthday_Akihito_2017.png",
                            QuizId = 6
                        },
                        new
                        {
                            Id = 22,
                            QuestionContent = "Which dish is known as the national dish of Hungary?",
                            QuestionImgUrl = "https://upload.wikimedia.org/wikipedia/commons/4/46/Flag_of_Hungary_with_arms_%28state%29.png",
                            QuizId = 6
                        });
                });

            modelBuilder.Entity("QuizWebApp.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryType")
                        .HasColumnType("integer");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<float>("Popularity")
                        .HasColumnType("real");

                    b.Property<string>("QuizName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryType = 2,
                            Difficulty = 0,
                            IsApproved = true,
                            Popularity = 100f,
                            QuizName = "Capital Cities around the World",
                            Rating = 100f,
                            ThumbnailUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Prague_%286365119737%29.jpg/1920px-Prague_%286365119737%29.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CategoryType = 1,
                            Difficulty = 1,
                            IsApproved = true,
                            Popularity = 61f,
                            QuizName = "Chemical Symbols",
                            Rating = 99f,
                            ThumbnailUrl = "https://i.pinimg.com/originals/de/54/d3/de54d3e8700cbb87d534844531ae5b71.png"
                        },
                        new
                        {
                            Id = 3,
                            CategoryType = 5,
                            Difficulty = 2,
                            IsApproved = true,
                            Popularity = 54f,
                            QuizName = "Retro Gaming",
                            Rating = 73f,
                            ThumbnailUrl = "https://as2.ftcdn.net/v2/jpg/05/59/01/05/1000_F_559010542_cXULDCcdcVwWCcf0DcE7V3QhCQO44Ryh.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CategoryType = 5,
                            Difficulty = 2,
                            IsApproved = true,
                            Popularity = 85f,
                            QuizName = "Bionicle Lore",
                            Rating = 50f,
                            ThumbnailUrl = "https://biosector01.com/w/images/bs01/0/0e/Toa_Mata_Sets.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CategoryType = 0,
                            Difficulty = 1,
                            IsApproved = true,
                            Popularity = 90f,
                            QuizName = "All about Animals!",
                            Rating = 87f,
                            ThumbnailUrl = "https://static.wikia.nocookie.net/mythology/images/f/f7/Animal_Collage.jpg/revision/latest/scale-to-width-down/600?cb=20210219055843"
                        },
                        new
                        {
                            Id = 6,
                            CategoryType = 3,
                            Difficulty = 1,
                            IsApproved = true,
                            Popularity = 75f,
                            QuizName = "National Dishes Around the World",
                            Rating = 97f,
                            ThumbnailUrl = "https://www.cactuslanguage.com/wp-content/uploads/2022/09/table-of-food.jpg"
                        });
                });

            modelBuilder.Entity("QuizWebApp.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("bytea");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuizWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuizWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuizWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuizWebApp.Models.Answer", b =>
                {
                    b.HasOne("QuizWebApp.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizWebApp.Models.Question", b =>
                {
                    b.HasOne("QuizWebApp.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizWebApp.Models.UserProfile", b =>
                {
                    b.HasOne("QuizWebApp.Models.ApplicationUser", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("QuizWebApp.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuizWebApp.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("QuizWebApp.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("QuizWebApp.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
